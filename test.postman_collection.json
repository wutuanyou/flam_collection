{
	"info": {
		"_postman_id": "b2b514fa-70a4-4688-bb25-eb399367cf39",
		"name": "Verify the flam,madmen,DB's data",
		"description": "### Overview(flam API)\nThe reporting API offers advertisers a programmatic way to access data that is present on the dashboard. Your Reporting API Key is the same for all of your apps. Each app has a unique Reporting API ID, which you can find on its respective application page. \n### host\nhttps://{host}/ext/adv/reports/spend\n### Authentication\nSecurity is handled in the request header. Find your API key in the account page on the Vungle Advertiser Dashboard. \n### Request Headers\n|Key|Value|Description|\n|:----:|:----:|:----:|\n|Authorization|Bearer [API Key]|API Key|\n|Vungle-Version|1|API Version|\n|Accept|text/csv or application/json|Accepted data format for results. Default is text/csv.|\n\n### Result\n* Format: We support JSON and CSV outputs, specified in the request header.\n* Date range: Historical information is available for up to six months. \n* Time zone: UTC is our default time zone, and cannot be changed at this time.\n* In the event of no data: Please note that if there is no data available for your query, Vungle sends back an empty '200' response. This indicates that the request has succeeded, but there is no data available to return.\n\n### Filter Parameters\nUse filter parameters to restrict the results to a subset of your spend data. Most filters are optional, and if they are excluded, Vungle returns all results for that filter.\n\n|Parameter name|Format|Action|If Unavailable|Example|\n|:----:|:----:|:----:|:----:|:----:|\n|start|ISO8601 date|Limits the result set to data no earlier than this date|Rejects request|start=2019-01-01|\n|end|ISO8601 date|Limits the result set to data no later than this date|Rejects request|end=2019-01-02|\n|country|Comma-separated list of ISO 3166-1 Alpha-2 country codes|Returns only spend data matching the listed countries|Returns all countries|Returns all countriescountry=US,CA,AU|\n|applicationId|Comma-separated list of Vungle Application IDs to return|Returns only spend data for the listed applications|Returns all applications|applicationId=586e201e242e3fd308000220,585849c3756684a50c0000a0|\n|campaignId|Comma-separated list of Vungle campaign IDs|Returns only data for the listed campaigns|Returns all campaigns|campaignId=586e201e242e3fd308000220,585849c3756684a50c0000a0|\n|creativeId|Comma-separated list of Vungle creative IDs|Returns only spend data for the listed creatives|Returns all creatives|creativeId=586e201e242e3fd308000220,585849c3756684a50c0000a0|\n|siteID|Comma-separated list of publisher site IDs|Returns only spend data for the listed sites|Returns all publishers|siteId=586e201e242e3fd308000220,585849c3756684a50c0000a0|\n|accountID|Comma-separated list of publisher account IDs|Returns only spend data for the listed accounts|Returns all accounts|account ID=58e71dd7294039844b0001c7|\n|placementID|Comma-separated list of publisher placement IDs|Returns only spend data for the listed placements|Returns all placements|placementID=5bc9877224291f02aee8741c|\n|adType|Comma-separated list of ad types|Returns only spend data for the listed ad types|Returns all ad types|adType=banner,mrec,video,fullscreen|\n|adSize|Comma-separated list of ad sizes|Returns only spend data for the listed ad sizes|Returns all ad sizes|adsize=728x90,default,320x50,300x50|\n\n### Dimensions Parameter\nUse dimensions to make your reports more or less granular. Send dimensions as a comma-separated list under a dimensions parameter. If you do not explicitly request a dimension, Vungle does not break the report down by that dimension.\n### Using the Dimensions Parameter\n|Parameter name|Format|Example|\n|----|----|----|\n|dimensions|Comma-separated list of specific strings, listed in the following table|dimensions=campaign,creative,date|\n\n### Available Dimensions\n|Dimension Name|Returns|Sample Return|Endpoints|\n|----|----|----|----|\n|platform|Grouped by platform string|iOS|spend|\n|application|Grouped by application ID and application Name|application ID 58086457cdf5f9eb6d000060,application name|spend|\n|campaign|Grouped by campaign ID and campaign Name|campaign ID\n58086457cdf5f9eb6d000060，campaign name Toy Blast iOS CA iPhone|spend|\n|date|Grouped by date|date 2019-01-01|spend|\n|country|Grouped by country|country US|spend|\n|creative|Grouped by creative ID and creative name|\n|site|Grouped by publisher app object ID and publisher app name|\n|placement|Grouped by placement\t|\n|adType|Grouped by adType|\n|adSize|Grouped by adSize|\n|date|Grouped by date|\n|isFromSKInstallPostbacks|Grouped by isFromSKInstallPostbacks|",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "negative Cases",
			"item": [
				{
					"name": "Flam-No start",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[`[INFO]Response Status is 400`] = responseCode.code === 400;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?end=2021-07-17&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "",
									"description": "must param",
									"disabled": true
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"description": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"disabled": true
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef",
									"disabled": true
								},
								{
									"key": "country",
									"value": "JP,CA",
									"description": "country=AF,AX,AL,DZ...",
									"disabled": true
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "5c0e6455eed9f60016acc3e9,5b324b8f1eb63f5c8201c517",
									"description": "publisher's id",
									"disabled": true
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078",
									"disabled": true
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen",
									"disabled": true
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "validating the param with no starttime"
					},
					"response": []
				},
				{
					"name": "Flam-No end",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[`[INFO]Response Status is 400`] = responseCode.code === 400;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start=2021-07-01&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-07-01",
									"description": "must param"
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param",
									"disabled": true
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"description": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"disabled": true
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef",
									"disabled": true
								},
								{
									"key": "country",
									"value": "JP,CA",
									"description": "country=AF,AX,AL,DZ...",
									"disabled": true
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "5c0e6455eed9f60016acc3e9,5b324b8f1eb63f5c8201c517",
									"description": "publisher's id",
									"disabled": true
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078",
									"disabled": true
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen",
									"disabled": true
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Flam-No aggregates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[`[INFO]Response Status is 400`] = responseCode.code === 400;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start=2021-07-01&end=2021-07-17",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-07-01",
									"description": "must param"
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas",
									"disabled": true
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"description": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"disabled": true
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef",
									"disabled": true
								},
								{
									"key": "country",
									"value": "JP,CA",
									"description": "country=AF,AX,AL,DZ...",
									"disabled": true
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "5c0e6455eed9f60016acc3e9,5b324b8f1eb63f5c8201c517",
									"description": "publisher's id",
									"disabled": true
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078",
									"disabled": true
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen",
									"disabled": true
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Flam-Null aggregates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[`[INFO]Response Status is 400`] = responseCode.code === 400;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start=2021-07-01&end=2021-07-17&aggregates=null",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-07-01",
									"description": "must param"
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param"
								},
								{
									"key": "aggregates",
									"value": "null",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"description": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"disabled": true
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef",
									"disabled": true
								},
								{
									"key": "country",
									"value": "JP,CA",
									"description": "country=AF,AX,AL,DZ...",
									"disabled": true
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "5c0e6455eed9f60016acc3e9,5b324b8f1eb63f5c8201c517",
									"description": "publisher's id",
									"disabled": true
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078",
									"disabled": true
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen",
									"disabled": true
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Flam-Unreal aggregates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[`[INFO]Response Status is 400`] = responseCode.code === 400;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start=2021-07-01&end=2021-07-17&aggregates=123&dimensions=application&applicationId=5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-07-01",
									"description": "must param"
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param"
								},
								{
									"key": "aggregates",
									"value": "123",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"description": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9"
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef",
									"disabled": true
								},
								{
									"key": "country",
									"value": "AF",
									"description": "country=AF,AX,AL,DZ...",
									"disabled": true
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "5c0e6455eed9f60016acc3e9,5b324b8f1eb63f5c8201c517",
									"description": "publisher's id",
									"disabled": true
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078",
									"disabled": true
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen",
									"disabled": true
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Flam-SomeParam Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[`[INFO]Response Status is 400`] = responseCode.code === 400;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start=2021-07-01&end=2021-07-17&aggregates=123&dimensions=application&applicationId=5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9&campaignId=5d8a7e907666bd216bf429ef&country=",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-07-01",
									"description": "must param"
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param"
								},
								{
									"key": "aggregates",
									"value": "123",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9",
									"description": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9"
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef"
								},
								{
									"key": "country",
									"value": "",
									"description": "country=AF,AX,AL,DZ..."
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "5c0e6455eed9f60016acc3e9,5b324b8f1eb63f5c8201c517",
									"description": "publisher's id",
									"disabled": true
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078",
									"disabled": true
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen",
									"disabled": true
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "this folder is A series of negative requests that should be return a status code of 400"
		},
		{
			"name": "ByAPP",
			"item": [
				{
					"name": "SQL-ByAggregatesTotalData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"host\": \"{{mysql_host}}\",\r\n    \"user\": \"{{mysql_user}}\",\r\n    \"password\": \"{{mysql_pass}}\",\r\n    \"port\": \"{{mysql_port}}\",\r\n    \"database\": \"gallywix_qa\",\r\n    \"findSql\": \" SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_1)/SUM(installs) AS d1ret,SUM(users_on_day_14)/SUM(installs)AS d14ret,SUM(users_on_day_3)/SUM(installs)      AS d3ret,SUM(users_on_day_30)/SUM(installs) AS d30ret,SUM(users_on_day_7)/SUM(installs) AS d7ret,SUM(value_through_day_1) AS d1rev,SUM(value_through_day_1)/ SUM(adv_spend)  AS d1roas,           SUM(value_through_day_14)                   AS d14rev,           SUM(value_through_day_14) / SUM(adv_spend)  AS d14roas,           SUM(value_through_day_3)                    AS d3rev,           SUM(value_through_day_3)  / SUM(adv_spend)  AS d3roas,           SUM(value_through_day_30)                   AS d30rev,           SUM(value_through_day_30) / SUM(adv_spend)  AS d30roas,           SUM(value_through_day_7)                    AS d7rev,           SUM(value_through_day_7)  / SUM(adv_spend)  AS d7roas  FROM advertiser_report_v2  WHERE event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}';\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAggregatesTotalData-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData = eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7roas,d7rev,d7ret,d1rev,d3rev,d14rev,d30rev,d1roas,d3roas,d14roas,d30roas,d1ret,d3ret,d14ret,d30ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas,IR"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAggregatesTotalData-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"getReportsTrend\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"filter_applications\":[],\"filter_campaigns\":[],\"filter_countries\":[],\"filter_creatives\":[],\"filter_platforms\":[],\"filter_publishers\":[]},\"query\":\"query getReportsTrend($start: Time!, $end: Time!, $filter_platforms: [Platform], $filter_countries: [CountryCode], $filter_applications: [ObjectID], $filter_campaigns: [ObjectID], $filter_creatives: [ObjectID], $filter_publishers: [ObjectID], $comparison_platforms: [Platform], $comparison_countries: [CountryCode], $comparison_applications: [ObjectID], $comparison_campaigns: [ObjectID], $comparison_creatives: [ObjectID], $comparison_publishers: [ObjectID]) {\\n  reportingTrend(\\n    params: {filter: {start: $start, end: $end, platforms: $filter_platforms, countries: $filter_countries, applications: $filter_applications, campaigns: $filter_campaigns, creatives: $filter_creatives, publishers: $filter_publishers}, comparison: {platforms: $comparison_platforms, countries: $comparison_countries, applications: $comparison_applications, campaigns: $comparison_campaigns, creatives: $comparison_creatives, publishers: $comparison_publishers}}\\n  ) {\\n    ...ReportingTrendComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportingTrendComplete on ReportingTrendResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  comparisons {\\n    country\\n    platform\\n    resource\\n    total {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    data {\\n      date\\n      metrics {\\n        ...ReportMetrics\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas ,SUM(installs)/sum(clicks) as IR FROM advertiser_report_v2 WHERE adv_app_id IN {{adv_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}';\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "flam-ByAppIds-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData = eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "参数不对",
									"disabled": true
								},
								{
									"key": "campaignId",
									"value": "5ddfcd3ec7e0a12bd63afe0f",
									"disabled": true
								},
								{
									"key": "country",
									"value": "AF,AX",
									"description": "AF,AX,AL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "madmen-ByAppIds-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadSpeData = eval(globals.assertMadSpeData)\r",
									"assertMadSpeData()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT adv_app_id AS 'application_id',1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{adv_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0    )    SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2AppIds-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}&dimensions=application",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "madmen-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT campaign_id AS campaign_id,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{adv_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0    )    SELECT t.*, a.name AS campaign_name      FROM t      LEFT JOIN campaigns a ON a.id = t.campaign_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-campaign-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}&dimensions=campaign",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "campaign",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-campaign-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"campaign\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT creative_id AS creative_id,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{adv_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0    )    SELECT t.*, a.name AS creative_name      FROM t      LEFT JOIN creatives a ON a.id = t.creative_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-creative-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}&dimensions=creative",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "creative",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-creative-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"creative\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT event_time AS date,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{adv_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0 \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-date-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"\r",
									"//console.log(\"expectStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}&dimensions=date",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-date-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"date\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT country,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{adv_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0   ;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-country-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}&dimensions=country",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-country-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailCountry = eval(globals.assertMadDetailCountry)\r",
									"assertMadDetailCountry()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"country\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppIds-publisher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT pub_app_id AS site_id,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{adv_app_id}}      AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0     )    SELECT t.*, s.name AS site_name      FROM t      LEFT JOIN applications s ON s.id = t.site_id\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-publisher-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{application_id}}&dimensions=site",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{application_id}}"
								},
								{
									"key": "dimensions",
									"value": "site",
									"description": "platform,application,campaign,date,country,creative,site,placement,adType,adSize"
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppIds-publisher-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[{{mad_appid}}],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"publisher\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						},
						"description": "###### query data from madmen,by dimension publisher"
					},
					"response": []
				}
			],
			"description": "###### To query the aggregates by application_id.Verify that madmen, FLam, DB data are equal",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ByCampaigns",
			"item": [
				{
					"name": "SQL-ByCampaigns-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE   campaign_id IN {{campaign_sql}}          AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'      HAVING (clicks + d7rev + installs + spend + views) > 0    \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCampaigns-total-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://report-int-qa.api.vungle.io/int/adv/reports/spend?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}",
							"protocol": "https",
							"host": [
								"report-int-qa",
								"api",
								"vungle",
								"io"
							],
							"path": [
								"int",
								"adv",
								"reports",
								"spend"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCampaigns-total-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"getReportsTrend\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"filter_applications\":[],\"filter_campaigns\":[{{campaignid_mad}}],\"filter_countries\":[],\"filter_creatives\":[],\"filter_platforms\":[],\"filter_publishers\":[]},\"query\":\"query getReportsTrend($start: Time!, $end: Time!, $filter_platforms: [Platform], $filter_countries: [CountryCode], $filter_applications: [ObjectID], $filter_campaigns: [ObjectID], $filter_creatives: [ObjectID], $filter_publishers: [ObjectID], $comparison_platforms: [Platform], $comparison_countries: [CountryCode], $comparison_applications: [ObjectID], $comparison_campaigns: [ObjectID], $comparison_creatives: [ObjectID], $comparison_publishers: [ObjectID]) {\\n  reportingTrend(\\n    params: {filter: {start: $start, end: $end, platforms: $filter_platforms, countries: $filter_countries, applications: $filter_applications, campaigns: $filter_campaigns, creatives: $filter_creatives, publishers: $filter_publishers}, comparison: {platforms: $comparison_platforms, countries: $comparison_countries, applications: $comparison_applications, campaigns: $comparison_campaigns, creatives: $comparison_creatives, publishers: $comparison_publishers}}\\n  ) {\\n    ...ReportingTrendComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportingTrendComplete on ReportingTrendResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  comparisons {\\n    country\\n    platform\\n    resource\\n    total {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    data {\\n      date\\n      metrics {\\n        ...ReportMetrics\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCampaigns-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" WITH t AS (   SELECT adv_app_id AS application_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  campaign_id IN {{campaign_sql}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )      SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCampaigns-application-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}&dimensions=application",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCampaigns-application-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[{{campaignid_mad}}],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCampaigns-campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"with t as(select campaign_id as campaign_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  campaign_id IN {{campaign_sql}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'  group by 1    HAVING (clicks + d7rev + installs + spend + views) > 0 )  SELECT t.*, a.name AS campaign_name      FROM t      LEFT JOIN campaigns a ON a.id = t.campaign_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-campaign-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}&dimensions=campaign",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "campaign",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-campaign-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[{{campaignid_mad}}],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"campaign\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCampaigns-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"with t as(select creative_id as creative_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  campaign_id IN {{campaign_sql}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )  SELECT t.*, a.name AS creative_name      FROM t      LEFT JOIN creatives a ON a.id = t.creative_id; \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}&dimensions=creative",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "creative",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-creative-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[{{campaignid_mad}}],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"creative\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-By2Campaigns-country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"select country, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  campaign_id IN {{campaign_sql}}    AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-country-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}&dimensions=country",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-country-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailCountry = eval(globals.assertMadDetailCountry)\r",
									"assertMadDetailCountry()\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[{{campaignid_mad}}],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"country\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-By2Campaigns-publisher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT pub_app_id AS site_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  campaign_id IN {{campaign_sql}}    AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0     )    SELECT t.*, s.name AS site_name      FROM t      LEFT JOIN applications s ON s.id = t.site_id  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-publisher-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}&dimensions=site",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "site",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-publisher-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[{{campaignid_mad}}],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"publisher\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCampaigns-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT event_time AS date,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE campaign_id IN {{campaign_sql}}  AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0 \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Campaigns-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"//console.log(\"expectStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&campaignId={{campaignId}}&dimensions=date",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "###### To query the aggregates by campaign_id.Verify that madmen, FLam, DB data are equal"
		},
		{
			"name": "ByCountries",
			"item": [
				{
					"name": "SQL-ByCountries-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  country IN {{country_sql}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'      HAVING (clicks + d7rev + installs + spend + views) > 0    \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-total-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-total-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"getReportsTrend\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"filter_applications\":[],\"filter_campaigns\":[],\"filter_countries\":[{{country_mad}}],\"filter_creatives\":[],\"filter_platforms\":[],\"filter_publishers\":[]},\"query\":\"query getReportsTrend($start: Time!, $end: Time!, $filter_platforms: [Platform], $filter_countries: [CountryCode], $filter_applications: [ObjectID], $filter_campaigns: [ObjectID], $filter_creatives: [ObjectID], $filter_publishers: [ObjectID], $comparison_platforms: [Platform], $comparison_countries: [CountryCode], $comparison_applications: [ObjectID], $comparison_campaigns: [ObjectID], $comparison_creatives: [ObjectID], $comparison_publishers: [ObjectID]) {\\n  reportingTrend(\\n    params: {filter: {start: $start, end: $end, platforms: $filter_platforms, countries: $filter_countries, applications: $filter_applications, campaigns: $filter_campaigns, creatives: $filter_creatives, publishers: $filter_publishers}, comparison: {platforms: $comparison_platforms, countries: $comparison_countries, applications: $comparison_applications, campaigns: $comparison_campaigns, creatives: $comparison_creatives, publishers: $comparison_publishers}}\\n  ) {\\n    ...ReportingTrendComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportingTrendComplete on ReportingTrendResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  comparisons {\\n    country\\n    platform\\n    resource\\n    total {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    data {\\n      date\\n      metrics {\\n        ...ReportMetrics\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCountries-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" WITH t AS (   SELECT adv_app_id AS application_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  country IN {{country_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )      SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-application-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}&dimensions=application",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-application-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[{{country_mad}}],\"creatives\":[],\"publishers\":[],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCountries-campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"with t as(select campaign_id as campaign_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  country IN {{country_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  ) SELECT t.*, a.name AS campaign_name      FROM t      LEFT JOIN campaigns a ON a.id = t.campaign_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-campaign-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}&dimensions=campaign",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "campaign",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-campaign-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[{{country_mad}}],\"creatives\":[],\"publishers\":[],\"dimension\":\"campaign\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCountries-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" with t as(select creative_id as creative_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  country IN {{country_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )  SELECT t.*, a.name AS creative_name      FROM t      LEFT JOIN creatives a ON a.id = t.creative_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-creative-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}&dimensions=creative",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "creative",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-creative-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[{{country_mad}}],\"creatives\":[],\"publishers\":[],\"dimension\":\"creative\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCountries-country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"select country, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE country IN {{country_sql}}    AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-country-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}&dimensions=country",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-country-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailCountry = eval(globals.assertMadDetailCountry)\r",
									"assertMadDetailCountry()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[{{country_mad}}],\"creatives\":[],\"publishers\":[],\"dimension\":\"country\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCountries-publisher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT pub_app_id AS site_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE country IN {{country_sql}}   AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0     )    SELECT t.*, s.name AS site_name      FROM t      LEFT JOIN applications s ON s.id = t.site_id  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-publisher-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}&dimensions=site",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "site",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-publisher-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[{{country_mad}}],\"creatives\":[],\"publishers\":[],\"dimension\":\"publisher\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCountries-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT event_time AS date,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2   WHERE  country IN {{country_sql}}  AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0 \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCountries-date-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&country={{country_api}}&dimensions=date",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "country",
									"value": "{{country_api}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ByCreatvies",
			"item": [
				{
					"name": "SQL-ByCreatives-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  creative_id IN {{creative_sql}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'      HAVING (clicks + d7rev + installs + spend + views) > 0    \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-total-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"//var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://report-int-qa.api.vungle.io/int/adv/reports/spend?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}",
							"protocol": "https",
							"host": [
								"report-int-qa",
								"api",
								"vungle",
								"io"
							],
							"path": [
								"int",
								"adv",
								"reports",
								"spend"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-total-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"getReportsTrend\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"filter_applications\":[],\"filter_campaigns\":[],\"filter_countries\":[],\"filter_creatives\":[{{creative_mad}}],\"filter_platforms\":[],\"filter_publishers\":[]},\"query\":\"query getReportsTrend($start: Time!, $end: Time!, $filter_platforms: [Platform], $filter_countries: [CountryCode], $filter_applications: [ObjectID], $filter_campaigns: [ObjectID], $filter_creatives: [ObjectID], $filter_publishers: [ObjectID], $comparison_platforms: [Platform], $comparison_countries: [CountryCode], $comparison_applications: [ObjectID], $comparison_campaigns: [ObjectID], $comparison_creatives: [ObjectID], $comparison_publishers: [ObjectID]) {\\n  reportingTrend(\\n    params: {filter: {start: $start, end: $end, platforms: $filter_platforms, countries: $filter_countries, applications: $filter_applications, campaigns: $filter_campaigns, creatives: $filter_creatives, publishers: $filter_publishers}, comparison: {platforms: $comparison_platforms, countries: $comparison_countries, applications: $comparison_applications, campaigns: $comparison_campaigns, creatives: $comparison_creatives, publishers: $comparison_publishers}}\\n  ) {\\n    ...ReportingTrendComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportingTrendComplete on ReportingTrendResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  comparisons {\\n    country\\n    platform\\n    resource\\n    total {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    data {\\n      date\\n      metrics {\\n        ...ReportMetrics\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCreatives-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" WITH t AS (   SELECT adv_app_id AS application_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  creative_id IN {{creative_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )      SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-application-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}&dimensions=application",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-application-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[{{creative_mad}}],\"publishers\":[],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-By2Creatives-campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"with t as(select campaign_id as campaign_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  creative_id IN {{creative_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  ) SELECT t.*, a.name AS campaign_name      FROM t      LEFT JOIN campaigns a ON a.id = t.campaign_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-campaign-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}&dimensions=campaign",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "campaign",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-campaign-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[{{creative_mad}}],\"publishers\":[],\"dimension\":\"campaign\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCreatives-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" with t as(select creative_id as creative_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  creative_id IN {{creative_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )  SELECT t.*, a.name AS creative_name      FROM t      LEFT JOIN creatives a ON a.id = t.creative_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-creative-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}&dimensions=creative",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "creative",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-creative-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[{{creative_mad}}],\"publishers\":[],\"dimension\":\"creative\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCreatives-country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"select country, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE creative_id IN {{creative_sql}}    AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-country-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}&dimensions=country",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-country-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailCountry = eval(globals.assertMadDetailCountry)\r",
									"assertMadDetailCountry()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[{{creative_mad}}],\"publishers\":[],\"dimension\":\"country\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCreatives-publisher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT pub_app_id AS site_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE creative_id IN {{creative_sql}}   AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0     )    SELECT t.*, s.name AS site_name      FROM t      LEFT JOIN applications s ON s.id = t.site_id  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-publisher-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}&dimensions=site",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "site",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-publisher-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[{{creative_mad}}],\"publishers\":[],\"dimension\":\"publisher\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByCreatives-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT event_time AS date,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2   WHERE  creative_id IN {{creative_sql}}  AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0 \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByCreatives-date-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expectStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&creativeId={{creativeId}}&dimensions=date",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "creativeId",
									"value": "{{creativeId}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ByPlatforms",
			"item": [
				{
					"name": "SQL-ByPlatforms-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  platform IN {{platform_sql}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'      HAVING (clicks + d7rev + installs + spend + views) > 0    \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-total-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-total-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"getReportsTrend\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"filter_applications\":[],\"filter_campaigns\":[],\"filter_countries\":[],\"filter_creatives\":[],\"filter_platforms\":[{{platform_mad}}],\"filter_publishers\":[]},\"query\":\"query getReportsTrend($start: Time!, $end: Time!, $filter_platforms: [Platform], $filter_countries: [CountryCode], $filter_applications: [ObjectID], $filter_campaigns: [ObjectID], $filter_creatives: [ObjectID], $filter_publishers: [ObjectID], $comparison_platforms: [Platform], $comparison_countries: [CountryCode], $comparison_applications: [ObjectID], $comparison_campaigns: [ObjectID], $comparison_creatives: [ObjectID], $comparison_publishers: [ObjectID]) {\\n  reportingTrend(\\n    params: {filter: {start: $start, end: $end, platforms: $filter_platforms, countries: $filter_countries, applications: $filter_applications, campaigns: $filter_campaigns, creatives: $filter_creatives, publishers: $filter_publishers}, comparison: {platforms: $comparison_platforms, countries: $comparison_countries, applications: $comparison_applications, campaigns: $comparison_campaigns, creatives: $comparison_creatives, publishers: $comparison_publishers}}\\n  ) {\\n    ...ReportingTrendComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportingTrendComplete on ReportingTrendResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  comparisons {\\n    country\\n    platform\\n    resource\\n    total {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    data {\\n      date\\n      metrics {\\n        ...ReportMetrics\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPlatforms-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" WITH t AS (   SELECT adv_app_id AS application_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  platform IN {{platform_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )      SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-application-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}&dimensions=application",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-application-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPlatforms-campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"with t as(select campaign_id as campaign_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  platform IN {{platform_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  ) SELECT t.*, a.name AS campaign_name      FROM t      LEFT JOIN campaigns a ON a.id = t.campaign_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-campaign-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}&dimensions=campaign",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}"
								},
								{
									"key": "dimensions",
									"value": "campaign",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-campaign-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"campaign\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPlatforms-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" with t as(select creative_id as creative_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  platform IN {{platform_sql}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )  SELECT t.*, a.name AS creative_name      FROM t      LEFT JOIN creatives a ON a.id = t.creative_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-creative-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}&dimensions=creative",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}"
								},
								{
									"key": "dimensions",
									"value": "creative",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-creative-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"creative\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPlatforms-country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"select country, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE platform IN {{platform_sql}}   AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-country-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}&dimensions=country",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-country-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailCountry = eval(globals.assertMadDetailCountry)\r",
									"assertMadDetailCountry()\r",
									"\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"country\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPlatforms-publisher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT pub_app_id AS site_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE platform IN {{platform_sql}}   AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0     )    SELECT t.*, s.name AS site_name      FROM t      LEFT JOIN applications s ON s.id = t.site_id  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-publisher-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}&dimensions=site",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}"
								},
								{
									"key": "dimensions",
									"value": "site",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-publisher-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[],\"dimension\":\"publisher\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPlatforms-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT event_time AS date,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2   WHERE  platform IN {{platform_sql}}  AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0 \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPlatforms-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expectStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&platform={{platform_api}}&dimensions=date",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "platform",
									"value": "{{platform_api}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ByPublishers",
			"item": [
				{
					"name": "SQL-ByPublishers-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  pub_app_id IN {{pub_app_id}}       AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'      HAVING (clicks + d7rev + installs + spend + views) > 0    \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-total-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//if(expectStrData!=undefined&&expectStrData!=null&&expectStrData!=\"\"){\r",
									"//    var listkey = Object.keys(expectStrData[0])\r",
									"//    console.log(listkey)\r",
									"//}\r",
									"\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-total-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadTotalData = eval(globals.assertMadTotalData)\r",
									"assertMadTotalData()\r",
									"\r",
									"\r",
									"    \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"getReportsTrend\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"filter_applications\":[],\"filter_campaigns\":[],\"filter_countries\":[],\"filter_creatives\":[],\"filter_platforms\":[],\"filter_publishers\":[{{pub_mad}}]},\"query\":\"query getReportsTrend($start: Time!, $end: Time!, $filter_platforms: [Platform], $filter_countries: [CountryCode], $filter_applications: [ObjectID], $filter_campaigns: [ObjectID], $filter_creatives: [ObjectID], $filter_publishers: [ObjectID], $comparison_platforms: [Platform], $comparison_countries: [CountryCode], $comparison_applications: [ObjectID], $comparison_campaigns: [ObjectID], $comparison_creatives: [ObjectID], $comparison_publishers: [ObjectID]) {\\n  reportingTrend(\\n    params: {filter: {start: $start, end: $end, platforms: $filter_platforms, countries: $filter_countries, applications: $filter_applications, campaigns: $filter_campaigns, creatives: $filter_creatives, publishers: $filter_publishers}, comparison: {platforms: $comparison_platforms, countries: $comparison_countries, applications: $comparison_applications, campaigns: $comparison_campaigns, creatives: $comparison_creatives, publishers: $comparison_publishers}}\\n  ) {\\n    ...ReportingTrendComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportingTrendComplete on ReportingTrendResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  comparisons {\\n    country\\n    platform\\n    resource\\n    total {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    data {\\n      date\\n      metrics {\\n        ...ReportMetrics\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPublishers-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" WITH t AS (   SELECT adv_app_id AS application_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  pub_app_id IN {{pub_app_id}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )      SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Publishers-application-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}&dimensions=application",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Publishers-application-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[{{pub_mad}}],\"dimension\":\"application\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPublishers-campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"with t as(select campaign_id as campaign_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE pub_app_id IN {{pub_app_id}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  ) SELECT t.*, a.name AS campaign_name      FROM t      LEFT JOIN campaigns a ON a.id = t.campaign_id;\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-campaign-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}&dimensions=campaign",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								},
								{
									"key": "dimensions",
									"value": "campaign",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-campaign-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[{{pub_mad}}],\"dimension\":\"campaign\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPublishers-creative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" with t as(select creative_id as creative_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE pub_app_id IN {{pub_app_id}}      AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )  SELECT t.*, a.name AS creative_name      FROM t      LEFT JOIN creatives a ON a.id = t.creative_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-creative-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}&dimensions=creative",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								},
								{
									"key": "dimensions",
									"value": "creative",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-creative-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[{{pub_mad}}],\"dimension\":\"country\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPublishers-country",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"select country, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE adv_app_id IN {{pub_app_id}}    AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Publishers-country-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}&dimensions=country",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Publishers-country-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[{{pub_mad}}],\"dimension\":\"creative\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPublishers-publisher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"WITH t AS (SELECT pub_app_id AS site_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE pub_app_id IN {{pub_app_id}}     AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'   GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0     )    SELECT t.*, s.name AS site_name      FROM t      LEFT JOIN applications s ON s.id = t.site_id  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Publishers-publisher-flam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}&dimensions=site",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								},
								{
									"key": "dimensions",
									"value": "site",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By2Publishers-publisher-mad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertMadDetailData = eval(globals.assertMadDetailData)\r",
									"assertMadDetailData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_mad}}",
								"type": "text"
							},
							{
								"key": "Vungle-source",
								"value": "grow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"GetReportingDetail\",\"variables\":{\"start\":\"{{startTime_mad}}\",\"end\":\"{{endTime_mad}}\",\"platforms\":[{{platform_mad}}],\"applications\":[],\"campaigns\":[],\"countries\":[],\"creatives\":[],\"publishers\":[{{pub_mad}}],\"dimension\":\"publisher\",\"sortKey\":\"views\",\"page\":1,\"per_page\":10000,\"isSortAsc\":false},\"query\":\"query GetReportingDetail($sortKey: ReportingSortableKey!, $isSortAsc: Boolean!, $start: Time!, $end: Time!, $dimension: Dimension!, $page: Int, $per_page: Int, $platforms: [Platform], $applications: [ObjectID], $campaigns: [ObjectID], $creatives: [ObjectID], $publishers: [ObjectID], $countries: [CountryCode]) {\\n  reportingDetail(\\n    params: {filter: {start: $start, end: $end, platforms: $platforms, applications: $applications, campaigns: $campaigns, creatives: $creatives, publishers: $publishers, countries: $countries}, dimension: $dimension, pagination: {page: $page, per_page: $per_page}, sort: {key: $sortKey, asc: $isSortAsc}}\\n  ) {\\n    ...ReportDetailComplete\\n    __typename\\n  }\\n}\\n\\nfragment ReportDetailComplete on ReportingDetailResponse {\\n  total {\\n    ...ReportMetrics\\n    __typename\\n  }\\n  data {\\n    date\\n    platform\\n    country {\\n      ...ReportCountry\\n      __typename\\n    }\\n    application {\\n      ...ReportApplication\\n      __typename\\n    }\\n    campaign {\\n      ...ReportCampaign\\n      __typename\\n    }\\n    creative {\\n      ...ReportCreative\\n      __typename\\n    }\\n    publisher {\\n      ...ReportApplication\\n      __typename\\n    }\\n    metrics {\\n      ...ReportMetrics\\n      __typename\\n    }\\n    __typename\\n  }\\n  pagination {\\n    ...ReportPagination\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportMetrics on Metrics {\\n  views\\n  clicks\\n  installs\\n  spend\\n  ecpm\\n  CTR\\n  IR\\n  IPM\\n  eCPI\\n  d1rev\\n  d3rev\\n  d7rev\\n  d14rev\\n  d30rev\\n  d1roas\\n  d3roas\\n  d7roas\\n  d14roas\\n  d30roas\\n  d1ret\\n  d3ret\\n  d7ret\\n  d14ret\\n  d30ret\\n  __typename\\n}\\n\\nfragment ReportCountry on Country {\\n  id\\n  code\\n  name\\n  region\\n  __typename\\n}\\n\\nfragment ReportApplication on Application {\\n  id\\n  name\\n  platform\\n  adminStatus\\n  store {\\n    thumbnail\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCampaign on Campaign {\\n  id\\n  name\\n  status\\n  isArchived\\n  servingStatus {\\n    approved\\n    creatives\\n    hasAccountBudget\\n    hasBudget\\n    ioSigned\\n    notExpired\\n    remainingViewLimit\\n    remainingSpendLimit\\n    __typename\\n  }\\n  settings {\\n    adType\\n    __typename\\n  }\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportCreative on Creative {\\n  id\\n  name\\n  vungleName\\n  adminStatus\\n  status\\n  application {\\n    ...ReportApplication\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ReportPagination on PaginationResult {\\n  page\\n  pages\\n  perPage\\n  total\\n  __typename\\n}\\n\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://madmen-qa5-api.vungle.io/graphql",
							"protocol": "https",
							"host": [
								"madmen-qa5-api",
								"vungle",
								"io"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByPublishers-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT event_time AS date,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2   WHERE  pub_app_id IN {{pub_app_id}}  AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'     GROUP BY 1    HAVING (clicks + d7rev + installs + spend + views) > 0 \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByPublishers-date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expectStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&siteId={{siteId}}&dimensions=date",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								},
								{
									"key": "dimensions",
									"value": "date",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CompositionScenario",
			"item": [
				{
					"name": "SQL-ByAppCamCtyPub-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"var initData = eval(globals.initData)\r",
									"initData()\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\"SELECT country,1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2      WHERE  adv_app_id IN {{adv_app_id}} AND campaign_id IN {{campaign_sql}}      AND country IN {{country_sql}}    AND pub_app_id IN {{pub_app_id}}    AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'  group by 1    HAVING (clicks + d7rev + installs + spend + views) > 0    \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppCamCtyPub-total",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId={{applicationId}}&dimensions=country&campaignId={{campaignId}}&country=US,BR&siteId={{siteId}}",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "{{applicationId}}"
								},
								{
									"key": "dimensions",
									"value": "country",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								},
								{
									"key": "campaignId",
									"value": "{{campaignId}}"
								},
								{
									"key": "country",
									"value": "US,BR"
								},
								{
									"key": "siteId",
									"value": "{{siteId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SQL-ByAppCamCtyPub-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"host\":\"{{mysql_host}}\",\r\n\t\"user\":\"{{mysql_user}}\",\r\n\t\"password\":\"{{mysql_pass}}\",\r\n\t\"port\":\"{{mysql_port}}\",\r\n\t\"database\":\"{{mysql_db}}\",\r\n\t\"findSql\":\" WITH t AS (   SELECT adv_app_id AS application_id, 1000 * (SUM(adv_spend) / SUM(views))  AS eCPM,  1000 * (SUM(installs) / SUM(impressions))   AS IPM,    SUM(clicks) AS clicks,   SUM(installs) AS installs,SUM(views) AS views,  SUM(adv_spend) AS spend,SUM(adv_spend)/SUM(installs) as eCPI,SUM(clicks)/SUM(impressions) AS CTR, SUM(installs)/SUM(clicks) AS IR,SUM(users_on_day_7)  / SUM(installs)  AS d7ret,  SUM(value_through_day_7)  AS d7rev,  SUM(value_through_day_7)/SUM(adv_spend)  AS d7roas   FROM advertiser_report_v2     WHERE  adv_app_id IN ('5b324b8f1eb63f5c8201c517','5c0e6455eed9f60016acc3e9')  and country in ('US','BR')  AND pub_app_id in ('5efcadb6e3c396000176bbdb','590b5df4004ccfdd3b000a35') and campaign_id in ('5d8a7e907666bd216bf429ef','5b36662c2516f12a6019f744') AND event_time <  '{{endTimeSQL}}'       AND event_time >= '{{startTime}}'    group by 1   HAVING (clicks + d7rev + installs + spend + views) > 0 )      SELECT t.*, a.name AS application_name      FROM t      LEFT JOIN applications a ON a.id = t.application_id;  \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8005/mysql_demo/find/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8005",
							"path": [
								"mysql_demo",
								"find",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ByAppCamCtyPub-application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assertNotTimeout = eval(globals.assertNotTimeout)\r",
									"assertNotTimeout()\r",
									"var getResponseJson = eval(globals.getResponseJson)\r",
									"getResponseJson()\r",
									"var assertStatus = eval(globals.assertStatus)\r",
									"assertStatus()\r",
									"var assertResponseTime = eval(globals.assertResponseTime)\r",
									"assertResponseTime()\r",
									"var assertData =eval(globals.assertData)\r",
									"assertData()\r",
									"var setResponseAsGlo = eval(globals.setResponseAsGlo)\r",
									"setResponseAsGlo()\r",
									"\r",
									"//console.log(\"expeStrData:\"+JSON.stringify(expectStrData))\r",
									"//console.log(\"realStrData:\"+JSON.stringify(JSON.parse(responseBody)))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start={{startTime}}&end={{endTimeAPI}}&aggregates=views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret&applicationId=5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9&dimensions=application&campaignId=5d8a7e907666bd216bf429ef,5b36662c2516f12a6019f744&country=US,BR&siteId=5efcadb6e3c396000176bbdb,590b5df4004ccfdd3b000a35",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "{{startTime}}"
								},
								{
									"key": "end",
									"value": "{{endTimeAPI}}"
								},
								{
									"key": "aggregates",
									"value": "views,clicks,installs,spend,eCPM,IPM,eCPI,CTR,IR,d7rev,d7roas,d7ret",
									"description": "d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef,5b36662c2516f12a6019f744"
								},
								{
									"key": "country",
									"value": "US,BR"
								},
								{
									"key": "siteId",
									"value": "5efcadb6e3c396000176bbdb,590b5df4004ccfdd3b000a35"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FlamCompleteReqDemo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//验证状态码为200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Vungle-Version",
						"value": "1",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}{{path}}?start=2021-07-01&end=2021-07-17&aggregates=installs,clicks,impressions,spend,IPM,eCPM,d7rev,d7roas,d7ret&dimensions=application&applicationId=5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9&campaignId=5d8a7e907666bd216bf429ef&country=JP,CA&creativeId=5daf74f0d58db54e7058205a&platform=iOS&siteId=6123d6d71e03d6001dfb7643,6123d6d71e03d6001dfb7641&placementId=58dd5e3376c1fbc017000078&adType=banner&adSize=728x90",
					"host": [
						"{{host}}{{path}}"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-07-01",
							"description": "must param"
						},
						{
							"key": "end",
							"value": "2021-07-17",
							"description": "must param"
						},
						{
							"key": "aggregates",
							"value": "installs,clicks,impressions,spend,IPM,eCPM,d7rev,d7roas,d7ret",
							"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
						},
						{
							"key": "dimensions",
							"value": "application",
							"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize,isFromSKInstallPostbacks"
						},
						{
							"key": "applicationId",
							"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9"
						},
						{
							"key": "campaignId",
							"value": "5d8a7e907666bd216bf429ef"
						},
						{
							"key": "country",
							"value": "JP,CA",
							"description": "country=AF,AX,AL,DZ..."
						},
						{
							"key": "creativeId",
							"value": "5daf74f0d58db54e7058205a"
						},
						{
							"key": "platform",
							"value": "iOS",
							"description": "platform=iOS,android,windows,linux"
						},
						{
							"key": "siteId",
							"value": "6123d6d71e03d6001dfb7643,6123d6d71e03d6001dfb7641",
							"description": "publisher's id"
						},
						{
							"key": "placementId",
							"value": "58dd5e3376c1fbc017000078"
						},
						{
							"key": "adType",
							"value": "banner",
							"description": "adType=banner,mrec,video,fullscreen"
						},
						{
							"key": "adSize",
							"value": "728x90",
							"description": "adsize=728x90,default,320x50,300x50"
						},
						{
							"key": "accountId",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "FlamCompleteReqDemo",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Vungle-Version",
								"value": "1",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{path}}?start=2021-07-01&end=2021-07-17&aggregates=installs,clicks,impressions,spend,IPM,eCPM,d7rev,d7roas,d7ret&dimensions=application&applicationId=5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9&campaignId=5d8a7e907666bd216bf429ef&country=JP,CA&creativeId=5daf74f0d58db54e7058205a&platform=iOS&siteId=6123d6d71e03d6001dfb7643,6123d6d71e03d6001dfb7641&placementId=58dd5e3376c1fbc017000078&adType=banner&adSize=728x90",
							"host": [
								"{{host}}{{path}}"
							],
							"query": [
								{
									"key": "start",
									"value": "2021-07-01",
									"description": "must param"
								},
								{
									"key": "end",
									"value": "2021-07-17",
									"description": "must param"
								},
								{
									"key": "aggregates",
									"value": "installs,clicks,impressions,spend,IPM,eCPM,d7rev,d7roas,d7ret",
									"description": "aggregates=d1roas,d30roas,clicks,installs,spend,d1rev,d30rev,d14roas,d1ret,d3ret,views,IPM,eCPI,d7ret,d30ret,d14rev,d14ret,ecpm,CTR,d7rev,d7roas,IR,d3rev,d3roas"
								},
								{
									"key": "dimensions",
									"value": "application",
									"description": "dimensions=platform,application,campaign,date,,country,creative,site,placement,adType,adSize"
								},
								{
									"key": "applicationId",
									"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9"
								},
								{
									"key": "campaignId",
									"value": "5d8a7e907666bd216bf429ef"
								},
								{
									"key": "country",
									"value": "JP,CA",
									"description": "country=AF,AX,AL,DZ..."
								},
								{
									"key": "creativeId",
									"value": "5daf74f0d58db54e7058205a"
								},
								{
									"key": "platform",
									"value": "iOS",
									"description": "platform=iOS,android,windows,linux"
								},
								{
									"key": "siteId",
									"value": "6123d6d71e03d6001dfb7643,6123d6d71e03d6001dfb7641",
									"description": "publisher's id"
								},
								{
									"key": "placementId",
									"value": "58dd5e3376c1fbc017000078"
								},
								{
									"key": "adType",
									"value": "banner",
									"description": "adType=banner,mrec,video,fullscreen"
								},
								{
									"key": "adSize",
									"value": "728x90",
									"description": "adsize=728x90,default,320x50,300x50"
								},
								{
									"key": "accountId",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//define the toolFunction of functions",
					"function initFunc(funcName, func) {",
					"    postman.setGlobalVariable(funcName, \"(function(){return  \" + func + \";})()\");",
					"}",
					"",
					"//init flam param",
					"initFunc(\"initFlamParam\",function initFlamParam(){",
					"    //init flam endTime",
					"    if(data.endTime){",
					"        var endTimeAPI = pm.collectionVariables.set(\"endTimeAPI\",data.endTime)",
					"        var endTimeAPI = pm.collectionVariables.get(\"endTimeAPI\",endTimeAPI)",
					"        //console.log(endTimeAPI)",
					"    }",
					"",
					"    //init flam campaign_id",
					"    if(data.campaign_id){",
					"        var campaignId = pm.collectionVariables.set(\"campaignId\",data.campaign_id)",
					"        var campaignId = pm.collectionVariables.get(\"campaignId\",campaignId)",
					"    }",
					"",
					"    //init flam creative_id",
					"    if(data.creative_id){",
					"        var creativeId = pm.collectionVariables.set(\"creativeId\",data.creative_id)",
					"        var creativeId = pm.collectionVariables.get(\"creativeId\",creativeId)",
					"    }",
					"",
					"    //init flam country_id",
					"    if(data.country_id){",
					"        var country_api = pm.collectionVariables.set(\"country_api\",data.country_id)",
					"        var country_api = pm.collectionVariables.get(\"country_api\",country_api)",
					"    }",
					"     ",
					"    //init flam platform_id",
					"    if(data.platform_id){",
					"        var platform_api = pm.collectionVariables.set(\"platform_api\",data.platform_id)",
					"        var platform_api = pm.collectionVariables.get(\"platform_api\",platform_api)",
					"    }",
					"",
					"    //init flam publisher_id",
					"    if(data.publisher_id){",
					"        var siteId = pm.collectionVariables.set(\"siteId\",data.publisher_id)",
					"        var siteId = pm.collectionVariables.get(\"siteId\",siteId)",
					"        //console.log(siteId)",
					"    }",
					"",
					"})",
					"var initFlamParam = eval(globals.initFlamParam)",
					"initFlamParam()",
					"",
					"//init mysql param Tools",
					"initFunc(\"initMysqlParamTool\",function initMysqlParamTool(value){",
					"    var value = value.split(\",\")",
					"    for(i in value){",
					"        var va = value[i]",
					"        va = \"\\'\"+va+\"\\'\"",
					"        value[i] = va",
					"    }",
					"    var value = \"(\" + value.join(\",\") + \")\"",
					"    return value",
					"})",
					"var initMysqlParamTool = eval(globals.initMysqlParamTool)",
					"",
					"//init mysql param",
					"initFunc(\"initMysqlParam\",function initMysqlParam(){",
					"    //init mysql endTime",
					"    if(data.endTime){",
					"        var endTimeSQL = data.endTime",
					"        var endTimeSQL = new Date(endTimeSQL)",
					"        var endTimeSQL = endTimeSQL.setDate(endTimeSQL.getDate()+1);",
					"        var year = new Date(endTimeSQL).getFullYear();",
					"        var month = new Date(endTimeSQL).getMonth()+1;",
					"        var day = new Date(endTimeSQL).getDate();",
					"            if(month<10){",
					"                month=\"0\"+month",
					"            }",
					"            if(day<10){",
					"                day=\"0\"+day",
					"            }",
					"        endTimeSQL =  year + \"-\" + month + \"-\" + day;        ",
					"        pm.collectionVariables.set(\"endTimeSQL\",endTimeSQL)",
					"        pm.collectionVariables.get(\"endTimeSQL\",endTimeSQL)          ",
					"    //console.log(endTimeSQL)",
					"    }",
					"",
					"    //init mysql application_id",
					"    if(data.application_id){",
					"        var adv_app_id = data.application_id",
					"        var adv_app_id = initMysqlParamTool(adv_app_id)",
					"        pm.collectionVariables.set(\"adv_app_id\",adv_app_id)",
					"        pm.collectionVariables.get(\"adv_app_id\",adv_app_id)",
					"    //console.log(\"---\"+adv_app_id)",
					"    }",
					"",
					"    //init mysql campaign_id",
					"    if(data.campaign_id){",
					"        var campaign_sql = data.campaign_id",
					"        var campaign_sql = initMysqlParamTool(campaign_sql)",
					"        pm.collectionVariables.set(\"campaign_sql\",campaign_sql)",
					"        pm.collectionVariables.get(\"campaign_sql\",campaign_sql)",
					"        //console.log(\"-----campaign_id:\"+campaign_id)",
					"    }",
					"",
					"    //init mysql creative_id",
					"    if(data.creative_id){",
					"        var creative_sql = data.creative_id",
					"        var creative_sql = initMysqlParamTool(creative_sql)",
					"        pm.collectionVariables.set(\"creative_sql\",creative_sql)",
					"        pm.collectionVariables.get(\"creative_sql\",creative_sql)",
					"    }",
					"   ",
					"",
					"    //init mysql country",
					"    if(data.country_id){",
					"        var country_sql = data.country_id",
					"        var country_sql = initMysqlParamTool(country_sql)",
					"        pm.collectionVariables.set(\"country_sql\",country_sql)",
					"        pm.collectionVariables.get(\"country_sql\",country_sql)",
					"    }",
					"",
					"    //init mysql platform",
					"    if(data.platform_id){",
					"        var platform_sql = data.platform_id",
					"        var platform_sql = initMysqlParamTool(platform_sql)",
					"        pm.collectionVariables.set(\"platform_sql\",platform_sql)",
					"        pm.collectionVariables.get(\"platform_sql\",platform_sql)",
					"    }",
					"",
					"    //init mysql publisher",
					"    if(data.publisher_id){",
					"        var pub_app_id = data.publisher_id",
					"        var pub_app_id = initMysqlParamTool(pub_app_id)",
					"        pm.collectionVariables.set(\"pub_app_id\",pub_app_id)",
					"        pm.collectionVariables.get(\"pub_app_id\",pub_app_id)",
					"        //console.log(pub_app_id)",
					"    }",
					"",
					"})",
					"var initMysqlParam = eval(globals.initMysqlParam)",
					"initMysqlParam()",
					"",
					"//init mad param Tools",
					"initFunc(\"initMadParamTool\",function initMadParamTool(value){",
					"    var value = value.split(\",\")",
					"    for(i in value){",
					"        var va = value[i]",
					"        va = \"\\\"\"+ va +\"\\\"\"",
					"        value[i] = va",
					"    }",
					"    var value =  value.join(\",\") ",
					"    return value",
					"})",
					"var initMadParamTool = eval(globals.initMadParamTool)",
					"",
					"//init madmen param",
					"initFunc(\"initMadParam\",function initMadParam(){",
					"    //init mad startTime",
					"    if(data.startTime){",
					"        var startTime_mad = data.startTime+\"T00:00:00.000Z\"",
					"        var startTime_mad = pm.collectionVariables.set(\"startTime_mad\",startTime_mad)",
					"        var startTime_mad = pm.collectionVariables.get(\"startTime_mad\",startTime_mad)",
					"        //console.log(startTime_mad)",
					"    }",
					"",
					"    // init mad endTime",
					"    if(data.endTime){",
					"        var endTime_mad = data.endTime+\"T00:00:00.000Z\"",
					"        var endTime_mad = pm.collectionVariables.set(\"endTime_mad\",endTime_mad)",
					"        var endTime_mad = pm.collectionVariables.get(\"endTime_mad\",endTime_mad)",
					"        //console.log(endTime_mad)",
					"    }",
					"",
					"    //init mad application_id",
					"    if(data.application_id){",
					"        var mad_appid = data.application_id",
					"        var initMadParamTool = eval(globals.initMadParamTool)",
					"        var mad_appid = initMadParamTool(mad_appid)",
					"        console.log(mad_appid)",
					"        pm.collectionVariables.set(\"mad_appid\",mad_appid)",
					"        pm.collectionVariables.get(\"mad_appid\",mad_appid)",
					"    }",
					"",
					"    //init mad campaign_id",
					"    if(data.campaign_id){",
					"        var campaignid_mad = data.campaign_id",
					"        var campaignid_mad = initMadParamTool(campaignid_mad)",
					"        pm.collectionVariables.set(\"campaignid_mad\",campaignid_mad)",
					"        pm.collectionVariables.get(\"campaignid_mad\",campaignid_mad)",
					"    }",
					"",
					"    //init mad creative_id",
					"    if(data.creative_id){",
					"        var creative_mad = data.creative_id",
					"        var creative_mad = initMadParamTool(creative_mad)",
					"        pm.collectionVariables.set(\"creative_mad\",creative_mad)",
					"        pm.collectionVariables.get(\"creative_mad\",creative_mad)",
					"    }",
					"",
					"    //init mad country_id",
					"    if(data.country_id){",
					"        var country_mad = data.country_id",
					"        var country_mad = initMadParamTool(country_mad)",
					"        pm.collectionVariables.set(\"country_mad\",country_mad)",
					"        pm.collectionVariables.get(\"country_mad\",country_mad)",
					"    }",
					"",
					"    //init mad platform_id",
					"    if(data.platform_id){",
					"        var platform_mad = data.platform_id",
					"        var platform_mad = initMadParamTool(platform_mad)",
					"        pm.collectionVariables.set(\"country_mad\",country_mad)",
					"        pm.collectionVariables.get(\"country_mad\",country_mad)",
					"    }",
					"",
					"    //init mad publisher_id",
					"    if(data.publisher_id){",
					"        var pub_mad = data.publisher_id",
					"        var pub_mad = initMadParamTool(pub_mad)",
					"        pm.collectionVariables.set(\"pub_mad\",pub_mad)",
					"        pm.collectionVariables.get(\"pub_mad\",pub_mad)",
					"        //console.log(pub_mad)",
					"    }",
					"",
					"",
					"})",
					"var initMadParam = eval(globals.initMadParam)",
					"initMadParam()",
					"",
					"",
					"//define the functions which be used in tests;",
					"initFunc(\"setResponseAsGlo\",function setResponseAsGlo(){",
					"    var expectStrData = JSON.parse(responseBody)  ",
					"    pm.globals.set(\"expectStrData\",expectStrData)",
					"})",
					"",
					"//assert if the request's status equals 200",
					"initFunc(\"assertStatus\",function assertStatus(){",
					"    try{",
					"        tests[`[INFO]Response Status is 200`] = responseCode.code === 200;",
					"    }catch(e){console.log(e)}",
					"})",
					"",
					"//assert if the response' time < 500ms",
					"initFunc(\"assertResponseTime\",function assertResponseTime(){",
					"    try{",
					"        tests[`[INFO]Response Time within 500ms`] = responseTime < 100000;",
					"    }catch(e){console.log(e)}",
					"})",
					"",
					"//assert if the request's timeout",
					"initFunc(\"assertNotTimeout\",function assertNotTimeout(){",
					"    try{    ",
					"        var hasResponse = postman.getResponseHeader('Content-Type')?true:false;    ",
					"    if(!hasResponse) tests[\"The request is timeout,pls check the service.The other cases will be passed\"] = false;",
					"    else if(hasResponse) tests[`[INFO]Request INFO(timeout not parse)`] = true;}",
					"    catch(e){console.log(e)}",
					"})",
					"",
					"//get the response' data with tests",
					"initFunc(\"getResponseJson\",function getResponseJson(){",
					"    try{    ",
					"        var hasResponse = postman.getResponseHeader('Content-Type')?true:false;    ",
					"    if(!hasResponse) tests[\"The request is timeout,pls check the service.The other cases will be passed\"] = false;",
					"    else if(hasResponse) ",
					"    tests[`[INFO]Response INFO(timeout not parse)`] = true;}",
					"    catch(e){console.log(e)}",
					"})",
					"",
					"//init the data of database",
					"initFunc(\"initData\",function initData(){",
					"    try{    ",
					"        var hasResponse = postman.getResponseHeader('Content-Type')?true:false;    ",
					"    if(!hasResponse) tests[\"The request is timeout,pls check the service.The other cases will be passed\"] = false;",
					"    else if(hasResponse) ",
					"    tests[`[INFO]init the DB's data`] = true;}",
					"    catch(e){console.log(e)}",
					"})",
					"",
					"//assert the data of flamAPI",
					"initFunc(\"assertData\",function assertData(){",
					"    try{",
					"        //caculate the expectStrData",
					"        var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)",
					"        //-------------------------------------------------------------------------------",
					"        if(expectStrData!=undefined&&expectStrData!=null&&expectStrData!=\"\"){",
					"            var listkey = Object.keys(expectStrData[0])",
					"            var  a = listkey.includes(\"date\")",
					"            for(let i in expectStrData){",
					"                for(let j in listkey){",
					"                var name = listkey[j]",
					"                var value = expectStrData[i][name]  ",
					"                    if(typeof value==='number'){",
					"                    var valueArray = String(value).split('.')",
					"                    var deciPart=valueArray[1]",
					"                        if(deciPart!=undefined && deciPart.length>10){",
					"                            value=value.toFixed(10)",
					"                            expectStrData[i][name]=Number(value)",
					"                        }",
					"                    }",
					"                   if(a&&listkey[j]==='date'){",
					"                    var date = new Date(expectStrData[i]['date'])",
					"                    var year = new Date(date).getFullYear();",
					"                    var month = new Date(date).getMonth()+1;",
					"                    var day = new Date(date).getDate();",
					"                    if(month<10){",
					"                        month=\"0\"+month",
					"                    }",
					"                    if(day<10){",
					"                        day=\"0\"+day",
					"                    }",
					"                    date =  year + \"-\" + month + \"-\" + day;                  ",
					"                    expectStrData[i][name]=date",
					"                    }",
					"                }",
					"            }",
					"        }",
					"      //----------------------------------------------------------------------------------",
					"        var str = \"\"",
					"        for (var one in expectStrData){",
					"            for(var key in expectStrData[one]){",
					"             str += expectStrData[one][key] + \",\";",
					"            }",
					"        }",
					"        var expectStrData = str",
					"        //console.log(\"expe---\" + expectStrData)",
					"        //caculate the realStrData",
					"        var json = JSON.parse(responseBody)",
					"        var str = \"\"",
					"        for (var one in json){",
					"            for(var key in json[one]){",
					"                str += json[one][key] + \",\";",
					"                }",
					"            }      ",
					"        var realStrData = str",
					"        //console.log(\"real---\" + realStrData)",
					"        tests[\"[INFO]validate the flamAPI's data\"] = expectStrData === realStrData",
					"    }catch(e){console.log(e)}",
					"})",
					"",
					"//assert the madAPI's total data",
					"initFunc(\"assertMadTotalData\",function assertMadTotalData(){",
					"    try{",
					"        var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)",
					"        expectStrData = expectStrData[0]",
					"        //console.log(expectStrData)",
					"        var tru_data = JSON.parse(responseBody)",
					"        var tru_data = tru_data['data']['reportingTrend']['total'] ",
					"        //console.log(tru_data)",
					"        if(expectStrData!=null&&expectStrData!=undefined&&expectStrData!=\"\"){",
					"            ",
					"            var ex_keyvalue = Object.keys(expectStrData)      ",
					"            var tru_keyvalue = Object.keys(tru_data).splice(0,24)",
					"            //var tru_keyvalue = tru_keyvalue.concat();",
					"            //tru_keyvalue.pop();",
					"                for(i in tru_keyvalue){",
					"",
					"                    var value = tru_keyvalue[i]",
					"                    var a = ex_keyvalue.includes(value)",
					"",
					"                    if(a){",
					"                        if(tru_data[value]==expectStrData[value]){",
					"",
					"                            var result = true",
					"",
					"                        }",
					"                        else{",
					"",
					"                            var result = false",
					"                            console.log(\"exp:\"+expectStrData[value]+\"-----tru:\"+tru_data[value])",
					"                        }",
					"                    }",
					"                }",
					"            tests[`[INFO]validate the madmenAPI data`] = result             ",
					"        }else{",
					"            if(tru_data[0]==null){",
					"",
					"                var result = true",
					"            }else{",
					"                var result = false",
					"            }  ",
					"            tests[`[INFO]validate the madmenAPI data`] = result           ",
					"        }        ",
					"    }catch(e){console.log(e)}",
					"})",
					"",
					"//assert the madAPI's param total data(appTotal,campaignTotal,creativeTotal,PublisherTotal...)",
					"initFunc(\"assertMadSpeData\",function assertMadSpeData(){",
					"    try{",
					"        var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)",
					"",
					"        if(expectStrData!=undefined&&expectStrData!=\"\"&&expectStrData.length==tru_data.length){",
					"",
					"        var ex_keyvalue = Object.keys(expectStrData[0])",
					"        var tru_data = JSON.parse(responseBody)           ",
					"        var tru_data = tru_data['data']['reportingDetail']['total']",
					"        var tru_keyvalue = Object.keys(tru_data)  ",
					"",
					"            for(i in tru_keyvalue){",
					"",
					"                var value = tru_keyvalue[i]",
					"                var a = ex_keyvalue.includes(value)",
					"                expectStrData=expectStrData[0]",
					"",
					"                if(a){",
					"",
					"                    if(tru_data[value]==expectStrData[value]){",
					"                        var result = true",
					"                    }",
					"                    else{",
					"                        var result = false",
					"                        console.log(\"exp:\"+expectStrData[value]+\"-----tru:\"+tru_data[value])",
					"                    }",
					"                }",
					"            }",
					"        tests[`[INFO]validate the madmenAPI data`] = result  ",
					"",
					"        }else{",
					"            if(tru_data!=\"\"){",
					"                result = false",
					"            }else{",
					"                result = true",
					"            }",
					"        tests[`[INFO]validate the madmenAPI data`] = result              ",
					"        }",
					"   ",
					"    }catch(e){console.log(e)}",
					"      ",
					"})",
					"",
					"//assert the madAPI's dimensions including(application,campaign,creative,publisher,country...)",
					"initFunc(\"assertMadDetailData\",function assertMadDetailData(){",
					"    var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)",
					"    //console.log(expectStrData)",
					"    var tru_data = JSON.parse(responseBody)",
					"    if(tru_data.hasOwnProperty(\"errors\")){",
					"",
					"        tests[`[INFO]the madmenAPI is timeout:${tru_data}`] = false",
					"",
					"    }else{",
					"        tru_data = tru_data['data']['reportingDetail']['data']",
					"        //console.log(tru_data)",
					"        try{",
					"",
					"            //rule out empty and abnormal data",
					"            if(expectStrData!=undefined&&expectStrData!=\"\"&&expectStrData.length==tru_data.length){   ",
					"            var keys = Object.keys(expectStrData[0])",
					"            var di_keys = Object.keys(tru_data[0]).splice(0,7)",
					"",
					"                //caculate the dimension",
					"                for(di in di_keys){",
					"                va = di_keys[di]",
					"                value1 = tru_data[0][va]",
					"                    if(value1!=null){",
					"                        dimension = va",
					"                        //console.log(dimension)",
					"                    }",
					"                }",
					"",
					"                var s = Object.keys(tru_data[0][dimension]) ",
					"                b = s.includes('code')",
					"                //console.log(b)",
					"                //iterate the expectdata",
					"                for(i in expectStrData){",
					"                    exp_id = expectStrData[i][keys[0]] ",
					"                    for(j in tru_data){",
					"",
					"                        //check whether it is country dimension",
					"                        if(b){",
					"                            tru_id = tru_data[j][dimension]['code'] ",
					"                        }else{",
					"                            tru_id =  tru_data[j][dimension]['id']",
					"                        }",
					"                    ",
					"                        // find the campaign_id where falm's == madmen's",
					"                        if(exp_id==tru_id){",
					"                            metricKeys = Object.keys(tru_data[j]['metrics'])",
					"                            for(k in metricKeys){",
					"                                value = metricKeys[k]                      ",
					"                                if(keys.includes(value)){                  ",
					"                                tru_value = tru_data[j]['metrics'][value] ",
					"                                exp_value = expectStrData[i][value]",
					"                                    if(tru_value==exp_value){",
					"                                        result = true",
					"                                    }else{",
					"                                        result = false",
					"                                        console.log(expectStrData[i])",
					"                                        console.log(tru_data[j])",
					"                                    }",
					"                                }",
					"                            }            ",
					"                        }",
					"                    } ",
					"                }",
					"            tests[`[INFO]validate the madAPI's data`] = result",
					"",
					"            }else{",
					"                if(tru_data!=\"\"){",
					"",
					"                    result = false",
					"                }else{",
					"",
					"                    result = true                    ",
					"                }",
					"            tests[`[INFO]validate the madAPI's data`] = result  ",
					"            }",
					"            ",
					"        }catch(e){console.log(e)}  ",
					"    }",
					"",
					"})",
					"",
					"//assert the data of madAPI's country dimension",
					"initFunc(\"assertMadDetailCountry\",function assertMadDetailCountry(){",
					"    var expectStrData = pm.globals.get(\"expectStrData\",expectStrData)",
					"    var tru_data = JSON.parse(responseBody)",
					"    tru_data = tru_data['data']['reportingDetail']['data']",
					"    try{",
					"        //rule out empty and abnormal data",
					"        if(expectStrData!=undefined&&expectStrData!=\"\"&&expectStrData.length==tru_data.length){  ",
					"",
					"        keys = Object.keys(expectStrData[0])",
					"        di_keys = Object.keys(tru_data[0]).splice(0,7)",
					"",
					"            //caculate the dimension",
					"            for(di in di_keys){",
					"            va = di_keys[di]",
					"            value1 = tru_data[0][va]",
					"                if(value1!=null){",
					"                    dimension = va",
					"                    //console.log(dimension)",
					"                }",
					"            }",
					"            //iterate the expectdata",
					"            for(i in expectStrData){",
					"",
					"                exp_id = expectStrData[i][keys[0]] ",
					"",
					"                for(j in tru_data){ ",
					"",
					"                tru_id =  tru_data[j][dimension]['code']   ",
					"                    // find the campaign_id where falm's == madmen's",
					"                    if(exp_id==tru_id){",
					"                        metricKeys = Object.keys(tru_data[j]['metrics'])",
					"                        for(k in metricKeys){",
					"",
					"                            value = metricKeys[k]                      ",
					"                            if(keys.includes(value)){                  ",
					"                            tru_value = tru_data[j]['metrics'][value] ",
					"                            exp_value = expectStrData[i][value]",
					"                                if(tru_value==exp_value){",
					"",
					"                                    result = true",
					"                                }",
					"                                else{",
					"                                    result = false",
					"                                    console.log(expectStrData[i])",
					"                                    console.log(tru_data[j])",
					"                                }",
					"                            }",
					"                        }            ",
					"                    }",
					"                }  ",
					"            }",
					"        tests[`[INFO]validate the madAPI's data`] = result",
					"        }else{",
					"            if(tru_data!=\"\"){",
					"                result = false",
					"            }else{",
					"                result = true",
					"            }",
					"        tests[`[INFO]validate the madAPI's data`] = result             ",
					"        }  ",
					"        ",
					"    }catch(e){console.log(e)}",
					"})",
					"",
					"//assert the data of  madAPI's date dimension ",
					"initFunc(\"assertMadDetailDate\",function assertMadDetailDate(){",
					"})",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mysql_host",
			"value": "memsql7-qa.dataeng.vungle.io"
		},
		{
			"key": "mysql_db",
			"value": "gallywix_qa"
		},
		{
			"key": "mysql_user",
			"value": "root"
		},
		{
			"key": "mysql_pass",
			"value": ""
		},
		{
			"key": "mysql_port",
			"value": "3306"
		},
		{
			"key": "host",
			"value": "https://report-int-qa.api.vungle.io"
		},
		{
			"key": "path",
			"value": "/int/adv/reports/spend"
		},
		{
			"key": "auth",
			"value": "Bearer STuhauik8PP2tnJdKRr5MsUMg1viXjbI0C_pOHGNIYATdIb_5HYvTzBphQ7b_F1M"
		},
		{
			"key": "auth_mad",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXRob2QiOiJqd3QiLCJpZCI6IjVhMjU2ZjRhNzYwZmRhMTYxZTAwMzFlZiIsImFjY291bnQiOiI1NmQ1NWM3MjU2MmI5YzM1MzgwMDAwMGQiLCJhcGlUb2tlbiI6IjFmMTNlNTI5MTEwNzlmMGNkMTBmYmMxMmE2ZDk2Mzc0IiwiaWF0IjoxNjI5NzE0OTQyLCJleHAiOjE2Mjk3NDM3NDJ9.dZ2PGAM6O2gacbKx59804VioboVzQtQU_ZdcwuoHTKA"
		},
		{
			"key": "startTime",
			"value": "2021-07-01"
		},
		{
			"key": "startTime_mad",
			"value": "2021-07-01T00:00:00.000Z"
		},
		{
			"key": "endTimeAPI",
			"value": "2021-07-04"
		},
		{
			"key": "endTime_mad",
			"value": "2021-07-04T23:59:59.999Z"
		},
		{
			"key": "endTimeSQL",
			"value": "2021-07-05"
		},
		{
			"key": "adv_app_id",
			"value": "('5b324b8f1eb63f5c8201c517', '5c0e6455eed9f60016acc3e9')"
		},
		{
			"key": "mad_appid",
			"value": "\"5b324b8f1eb63f5c8201c517\",\"5c0e6455eed9f60016acc3e9\""
		},
		{
			"key": "application_id",
			"value": "5b324b8f1eb63f5c8201c517,5c0e6455eed9f60016acc3e9"
		},
		{
			"key": "campaignId",
			"value": "5d8a7e907666bd216bf429ef,5b36662c2516f12a6019f744"
		},
		{
			"key": "campaignid_mad",
			"value": "\"5d8a7e907666bd216bf429ef\",\"5b36662c2516f12a6019f744\""
		},
		{
			"key": "country_sql",
			"value": "('JP','CA')"
		},
		{
			"key": "country_api",
			"value": "JP,CA"
		},
		{
			"key": "country_mad",
			"value": "\"JP\",\"CA\""
		},
		{
			"key": "creative_sql",
			"value": "('5daf74f0d58db54e7058205a')"
		},
		{
			"key": "creativeId",
			"value": "5daf74f0d58db54e7058205a"
		},
		{
			"key": "creative_mad",
			"value": "\"5daf74f0d58db54e7058205a\""
		},
		{
			"key": "platform_sql",
			"value": "('iOS','android')"
		},
		{
			"key": "platform_api",
			"value": "iOS,android"
		},
		{
			"key": "platform_mad",
			"value": "\"iOS\",\"android\""
		},
		{
			"key": "pub_app_id",
			"value": "('6123d6d71e03d6001dfb7643','6123d6d71e03d6001dfb7641')"
		},
		{
			"key": "siteId",
			"value": "6123d6d71e03d6001dfb7643,"
		},
		{
			"key": "pub_mad",
			"value": "\"6123d6d71e03d6001dfb7643\""
		},
		{
			"key": "campaign_sql",
			"value": "('5d8a7e907666bd216bf429ef','5b36662c2516f12a6019f744')"
		}
	]
}